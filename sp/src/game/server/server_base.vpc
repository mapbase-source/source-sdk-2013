//-----------------------------------------------------------------------------
//	SERVER_BASE.VPC
//
//	Project Base Script
//-----------------------------------------------------------------------------

$Macro OUTBINNAME	"server"
$Macro OUTBINDIR	"$SRCDIR\..\game\$GAMENAME\bin"
$Macro DEVKITBINDIR	"$GAMENAME\bin"							[$X360]
// It's important to include $GAMENAME in the generated_proto directory
// to avoid race conditions when multiple games are in one solution.
$Macro GENERATED_PROTO_DIR	"$SRCDIR\game\server\generated_proto_$GAMENAME"

$MacroRequired "GAMENAME"

$include "$SRCDIR\vpc_scripts\source_dll_base.vpc"
$include "$SRCDIR\vpc_scripts\protobuf_builder.vpc"
$Include "$SRCDIR\vpc_scripts\source_replay.vpc"	[$TF]
$Include "$SRCDIR\game\protobuf_include.vpc"

$Include "$SRCDIR\game\shared\shared_base.vpc"
// Mapbase stuff
$Include "$SRCDIR\game\server\server_mapbase.vpc"	[$MAPBASE]

$Configuration	"Debug"
{
	$General
	{
		$OutputDirectory		".\Debug_$GAMENAME"			[$WIN32]
		$IntermediateDirectory	".\Debug_$GAMENAME"			[$WIN32]

		$OutputDirectory		".\Debug_$GAMENAME_360"		[$X360]
		$IntermediateDirectory	".\Debug_$GAMENAME_360"		[$X360]
	}
}

$Configuration	"Release"
{
	$General
	{
		$OutputDirectory		".\Release_$GAMENAME"		[$WIN32]
		$IntermediateDirectory	".\Release_$GAMENAME"		[$WIN32]

		$OutputDirectory		".\Release_$GAMENAME_360"	[$X360]
		$IntermediateDirectory	".\Release_$GAMENAME_360"	[$X360]
	}
}

$Configuration
{
	$General
	{
		$OutputDirectory		".\$GAMENAME"		[$OSXALL]
	}
	
	$Compiler
	{
		$AdditionalIncludeDirectories	"$BASE;.\;$SRCDIR\game\shared;$SRCDIR\utils\common;$SRCDIR\game\shared\econ;$SRCDIR\game\server\NextBot"
		$PreprocessorDefinitions		"$BASE;GAME_DLL;VECTOR;VERSION_SAFE_STEAM_API_INTERFACES;PROTECTED_THINGS_ENABLE;sprintf=use_Q_snprintf_instead_of_sprintf;strncpy=use_Q_strncpy_instead;_snprintf=use_Q_snprintf_instead"
		$PreprocessorDefinitions		"$BASE;SWDS" [$POSIX]
		$PreprocessorDefinitions		"$BASE;fopen=dont_use_fopen" [$WINDOWS||$X360]
		$Create/UsePrecompiledHeader	"Use Precompiled Header (/Yu)"
		$Create/UsePCHThroughFile		"cbase.h"
	}

	$Linker
	{
		$AdditionalDependencies			"$BASE winmm.lib" [$WIN32]
		$SystemLibraries                                                        "iconv" [$OSXALL]
	}
}

$Project
{
	$Folder "Replay"
	{
		$File	"gamedll_replay.cpp"
		$File	"$SRCDIR\common\replay\ireplaysessionrecorder.h"
		
	}
	
	$Folder	"Source Files"
	{
		$File	"ai_activity.cpp"
		$File	"ai_baseactor.cpp"
		$File	"ai_baseactor.h"
		$File	"ai_basehumanoid.cpp"
		$File	"ai_basehumanoid.h"
		$File	"ai_basenpc.cpp"
		$File	"ai_basenpc.h"
		$File	"ai_basenpc_flyer.cpp"
		$File	"ai_basenpc_flyer.h"
		$File	"ai_basenpc_flyer_new.cpp"
		$File	"ai_basenpc_flyer_new.h"
		$File	"ai_basenpc_movement.cpp"
		$File	"ai_basenpc_physicsflyer.cpp"
		$File	"ai_basenpc_physicsflyer.h"
		$File	"ai_basenpc_schedule.cpp"
		$File	"ai_basenpc_squad.cpp"
		$File	"ai_behavior.cpp"
		$File	"ai_behavior.h"
		$File	"ai_behavior_assault.cpp"
		$File	"ai_behavior_assault.h"
		$File	"ai_behavior_fear.cpp"
		$File	"ai_behavior_fear.h"
		$File	"ai_behavior_follow.cpp"
		$File	"ai_behavior_follow.h"
		$File	"ai_behavior_lead.cpp"
		$File	"ai_behavior_lead.h"
		$File	"ai_behavior_rappel.cpp"
		$File	"ai_behavior_rappel.h"
		$File	"ai_behavior_standoff.cpp"
		$File	"ai_behavior_standoff.h"
		$File	"ai_blended_movement.cpp"
		$File	"ai_blended_movement.h"
		$File	"ai_component.h"
		$File	"ai_concommands.cpp"
		$File	"ai_condition.cpp"
		$File	"ai_condition.h"
		$File	"AI_Criteria.cpp" [!$NEW_RESPONSE_SYSTEM]
		$File	"AI_Criteria.h"
		$File	"$SRCDIR\game\shared\ai_criteria_new.cpp" [$NEW_RESPONSE_SYSTEM]
		$File	"$SRCDIR\game\shared\ai_criteria_new.h" [$NEW_RESPONSE_SYSTEM]
		$File	"ai_debug.h"
		$File	"ai_default.cpp"
		$File	"ai_default.h"
		$File	"ai_dynamiclink.cpp"
		$File	"ai_dynamiclink.h"
		$File	"ai_event.cpp"
		$File	"ai_goalentity.cpp"
		$File	"ai_goalentity.h"
		$File	"ai_hint.cpp"
		$File	"ai_hint.h"
		$File	"ai_hull.cpp"
		$File	"ai_hull.h"
		$File	"ai_initutils.cpp"
		$File	"ai_initutils.h"
		$File	"AI_Interest_Target.cpp"
		$File	"AI_Interest_Target.h"
		$File	"ai_link.cpp"
		$File	"ai_link.h"
		$File	"ai_localnavigator.cpp"
		$File	"ai_localnavigator.h"
		$File	"ai_looktarget.cpp"
		$File	"ai_looktarget.h"
		$File	"ai_memory.cpp"
		$File	"ai_memory.h"
		$File	"ai_motor.cpp"
		$File	"ai_motor.h"
		$File	"ai_moveprobe.cpp"
		$File	"ai_moveprobe.h"
		$File	"ai_moveshoot.cpp"
		$File	"ai_moveshoot.h"
		$File	"ai_movesolver.cpp"
		$File	"ai_movesolver.h"
		$File	"ai_movetypes.h"
		$File	"ai_namespaces.cpp"
		$File	"ai_namespaces.h"
		$File	"ai_navgoaltype.h"
		$File	"ai_navigator.cpp"
		$File	"ai_navigator.h"
		$File	"ai_navtype.h"
		$File	"ai_network.cpp"
		$File	"ai_network.h"
		$File	"ai_networkmanager.cpp"
		$File	"ai_networkmanager.h"
		$File	"ai_node.cpp"
		$File	"ai_node.h"
		$File	"ai_npcstate.h"
		$File	"ai_obstacle_type.h"
		$File	"ai_pathfinder.cpp"
		$File	"ai_pathfinder.h"
		$File	"ai_planesolver.cpp"
		$File	"ai_planesolver.h"
		$File	"ai_playerally.cpp"
		$File	"ai_playerally.h"
		$File	"AI_ResponseSystem.cpp" [!$NEW_RESPONSE_SYSTEM]
		$File	"AI_ResponseSystem.h"
		$File	"$SRCDIR\game\shared\ai_responsesystem_new.cpp" [$NEW_RESPONSE_SYSTEM]
		$File	"$SRCDIR\game\shared\ai_responsesystem_new.h" [$NEW_RESPONSE_SYSTEM]
		$File	"ai_route.cpp"
		$File	"ai_route.h"
		$File	"ai_routedist.h"
		$File	"ai_saverestore.cpp"
		$File	"ai_saverestore.h"
		$File	"ai_schedule.cpp"
		$File	"ai_schedule.h"
		$File	"ai_scriptconditions.cpp"
		$File	"ai_scriptconditions.h"
		$File	"ai_senses.cpp"
		$File	"ai_senses.h"
		$File	"ai_sentence.cpp"
		$File	"ai_sentence.h"
		$File	"ai_speech.cpp" [!$NEW_RESPONSE_SYSTEM]
		$File	"ai_speech.h"
		$File	"ai_speech_new.cpp" [$NEW_RESPONSE_SYSTEM]
		$File	"ai_speech_new.h" [$NEW_RESPONSE_SYSTEM]
		$File	"ai_speechfilter.cpp"
		$File	"ai_speechfilter.h"
		$File	"ai_squad.cpp"
		$File	"ai_squad.h"
		$File	"ai_squadslot.cpp"
		$File	"ai_squadslot.h"
		$File	"ai_tacticalservices.cpp"
		$File	"ai_tacticalservices.h"
		$File	"ai_task.cpp"
		$File	"ai_task.h"
		$File	"ai_trackpather.cpp"
		$File	"ai_trackpather.h"
		$File	"ai_utils.cpp"
		$File	"ai_utils.h"
		$File	"ai_waypoint.cpp"
		$File	"ai_waypoint.h"
		$File	"base_transmit_proxy.cpp"
		$File	"baseanimating.cpp"
		$File	"baseanimating.h"
		$File	"BaseAnimatingOverlay.cpp"
		$File	"BaseAnimatingOverlay.h"
		$File	"basecombatcharacter.cpp"
		$File	"basecombatcharacter.h"
		$File	"basecombatweapon.cpp"
		$File	"basecombatweapon.h"
		$File	"$SRCDIR\game\shared\basecombatweapon_shared.h"
		$File	"baseentity.cpp"
		$File	"baseentity.h"
		$File	"baseflex.cpp"
		$File	"baseflex.h"
		$File	"basemultiplayerplayer.cpp"
		$File	"basemultiplayerplayer.h"
		$File	"BasePropDoor.h"
		$File	"basetoggle.h"
		$File	"baseviewmodel.cpp"
		$File	"baseviewmodel.h"
		$File	"bitstring.cpp"
		$File	"bitstring.h"
		$File	"bmodels.cpp"
		$File	"buttons.cpp"
		$File	"buttons.h"
		$File	"cbase.cpp"
		$File	"client.cpp"
		$File	"client.h"
		$File	"colorcorrection.cpp"
		$File	"colorcorrectionvolume.cpp"
		$File	"CommentarySystem.cpp"
		$File	"controlentities.cpp"
		$File	"cplane.cpp"
		$File	"CRagdollMagnet.cpp"
		$File	"CRagdollMagnet.h"
		$File	"damagemodifier.cpp"
		$File	"$SRCDIR\game\shared\debugoverlay_shared.h"
		$File	"doors.cpp"
		$File	"doors.h"
		$File	"dynamiclight.cpp"
		$File	"$SRCDIR\public\editor_sendcommand.h"
		$File	"effects.cpp"
		$File	"effects.h"
		$File	"EffectsServer.cpp"
		$File	"$SRCDIR\public\eiface.h"
		$File	"enginecallback.h"
		$File	"entityapi.h"
		$File	"entityblocker.cpp"
		$File	"entityblocker.h"
		$File	"EntityDissolve.cpp"
		$File	"EntityDissolve.h"
		$File	"EntityFlame.cpp"
		$File	"entityinput.h"
		$File	"entitylist.cpp"
		$File	"entitylist.h"
		$File	"entityoutput.h"
		$File	"EntityParticleTrail.cpp"
		$File	"EntityParticleTrail.h"
		$File	"env_debughistory.cpp"
		$File	"env_debughistory.h"
		$File	"env_effectsscript.cpp"
		$File	"env_entity_maker.cpp"
		$File	"env_particlescript.cpp"
		$File	"env_player_surface_trigger.cpp"
		$File	"env_player_surface_trigger.h"
		$File	"env_projectedtexture.cpp"
		$File	"env_screenoverlay.cpp"
		$File	"env_texturetoggle.cpp"
		$File	"env_tonemap_controller.cpp"
		$File	"env_zoom.cpp"
		$File	"env_zoom.h"
		$File	"EnvBeam.cpp"
		$File	"EnvFade.cpp"
		$File	"EnvHudHint.cpp"
		$File	"EnvLaser.cpp"
		$File	"EnvLaser.h"
		$File	"EnvMessage.cpp"
		$File	"EnvMessage.h"
		$File	"envmicrophone.cpp"
		$File	"envmicrophone.h"
		$File	"EnvShake.cpp"
		$File	"EnvSpark.cpp"
		$File	"envspark.h"
		$File	"$SRCDIR\public\event_flags.h"
		$File	"event_tempentity_tester.h"
		$File	"EventLog.cpp"
		$File	"eventqueue.h"
		$File	"explode.cpp"
		$File	"explode.h"
		$File	"filters.cpp"
		$File	"filters.h"
		$File	"fire.cpp"
		$File	"fire.h"
		$File	"fire_smoke.cpp"
		$File	"fire_smoke.h"
		$File	"fish.cpp"
		$File	"fish.h"
		$File	"fogcontroller.cpp"
		$File	"fourwheelvehiclephysics.cpp"
		$File	"fourwheelvehiclephysics.h"
		$File	"func_areaportal.cpp"
		$File	"func_areaportalbase.cpp"
		$File	"func_areaportalbase.h"
		$File	"func_areaportalwindow.cpp"
		$File	"func_areaportalwindow.h"
		$File	"func_break.cpp"
		$File	"func_break.h"
		$File	"func_breakablesurf.cpp"
		$File	"func_breakablesurf.h"
		$File	"func_dust.cpp"
		$File	"func_ladder_endpoint.cpp"
		$File	"func_lod.cpp"
		$File	"func_movelinear.cpp"
		$File	"func_movelinear.h"
		$File	"func_occluder.cpp"
		$File	"func_reflective_glass.cpp"
		$File	"func_smokevolume.cpp"
		$File	"game.cpp"
		$File	"game.h"
		$File	"game_ui.cpp"
		$File	"gameinterface.cpp"
		$File	"gameinterface.h"
		$File	"gametrace_dll.cpp"
		$File	"gameweaponmanager.cpp"
		$File	"gameweaponmanager.h"
		$File	"genericactor.cpp"
		$File	"genericmonster.cpp"
		$File	"gib.cpp"
		$File	"gib.h"
		$File	"globals.cpp"
		$File	"globalstate.cpp"
		$File	"globalstate.h"
		$File	"globalstate_private.h"
		$File	"guntarget.cpp"
		$File	"h_ai.cpp"
		$File	"hierarchy.cpp"
		$File	"hierarchy.h"
		$file	"$SRCDIR\common\hl2orange.spa.h"
		$File	"hltvdirector.cpp"
		$File	"hltvdirector.h"
		$File	"info_camera_link.cpp"
		$File	"info_camera_link.h"
		$File	"info_overlay_accessor.cpp"
		$File	"init_factory.h"
		$File	"intermission.cpp"
		$File	"$SRCDIR\public\iregistry.h"
		$File	"$SRCDIR\game\shared\iscenetokenprocessor.h"
		$File	"iservervehicle.h"
		$File	"item_world.cpp"
		$File	"items.h"
		$File	"$SRCDIR\public\ivoiceserver.h"
		$File	"$SRCDIR\public\keyframe\keyframe.h"
		$File	"lightglow.cpp"
		$File	"lights.cpp"
		$File	"lights.h"
		$File	"locksounds.h"
		$File	"logic_measure_movement.cpp"
		$File	"logic_navigation.cpp"
		$File	"logicauto.cpp"
		$File	"logicentities.cpp"
		$File	"logicrelay.cpp"
		$File	"mapentities.cpp"
		$File	"maprules.cpp"
		$File	"maprules.h"
		$File	"MaterialModifyControl.cpp"
		$File	"message_entity.cpp"
		$File	"modelentities.cpp"
		$File	"$SRCDIR\game\shared\ModelSoundsCache.cpp"
		$File	"movehelper_server.cpp"
		$File	"movehelper_server.h"
		$File	"movement.cpp"
		$File	"movie_explosion.h"
		$File	"ndebugoverlay.cpp"
		$File	"ndebugoverlay.h"
		$File	"networkstringtable_gamedll.h"
		$File	"npc_vehicledriver.cpp"
		$File	"particle_fire.h"
		$File	"particle_light.cpp"
		$File	"particle_light.h"
		$File	"particle_smokegrenade.h"
		$File	"particle_system.cpp"
		$File	"pathcorner.cpp"
		$File	"pathtrack.cpp"
		$File	"pathtrack.h"
		$File	"$SRCDIR\public\vphysics\performance.h"
		$File	"phys_controller.cpp"
		$File	"phys_controller.h"
		$File	"physconstraint.cpp"
		$File	"physconstraint.h"
		$File	"physics_bone_follower.cpp"
		$File	"physics_cannister.cpp"
		$File	"physics_collisionevent.h"
		$File	"physics_fx.cpp"
		$File	"physics_impact_damage.cpp"
		$File	"pushentity.h"
		$File	"physics_main.cpp"
		$File	"physics_npc_solver.cpp"
		$File	"physics_npc_solver.h"
		$File	"physics_prop_ragdoll.cpp"
		$File	"physics_prop_ragdoll.h"
		$File	"physobj.cpp"
		$File	"physobj.h"
		$File	"player.cpp"
		$File	"player.h"
		$File	"player_command.cpp"
		$File	"player_command.h"
		$File	"player_lagcompensation.cpp"
		$File	"player_pickup.cpp"
		$File	"player_pickup.h"
		$File	"player_resource.cpp"
		$File	"player_resource.h"
		$File	"playerinfomanager.cpp"
		$File	"playerlocaldata.cpp"
		$File	"playerlocaldata.h"
		$File	"plugin_check.cpp"
		$File	"point_camera.cpp"
		$File	"point_camera.h"
		$File	"point_devshot_camera.cpp"
		$File	"point_playermoveconstraint.cpp"
		$File	"point_spotlight.cpp"
		$File	"point_template.cpp"
		$File	"point_template.h"
		$File	"pointanglesensor.cpp"
		$File	"PointAngularVelocitySensor.cpp"
		$File	"pointhurt.cpp"
		$File	"pointteleport.cpp"
		$File	"props.cpp"
		$File	"props.h"
		$File   "$SRCDIR\game\shared\querycache.cpp"
		$File	"ragdoll_manager.cpp"
		$File	"RagdollBoogie.cpp"
		$File	"RagdollBoogie.h"
		$File	"recipientfilter.cpp"
		$File	"recipientfilter.h"
		$File	"rope.cpp"
		$File	"rope.h"
		$File	"saverestore_gamedll.cpp"
		$File	"$SRCDIR\game\shared\SceneCache.cpp"
		$File	"sceneentity.cpp"
		$File	"sceneentity.h"
		$File	"scratchpad_gamedll_helpers.cpp"
		$File	"scripted.cpp"
		$File	"scripted.h"
		$File	"scriptedtarget.cpp"
		$File	"scriptedtarget.h"
		$File	"sendproxy.cpp"
		$File	"$SRCDIR\game\server\serverbenchmark_base.cpp"
		$File	"$SRCDIR\game\server\serverbenchmark_base.h"
		$File	"ServerNetworkProperty.cpp"
		$File	"ServerNetworkProperty.h"
		$File	"shadowcontrol.cpp"
		$File	"SkyCamera.cpp"
		$File	"slideshow_display.cpp"
		$File	"sound.cpp"
		$File	"soundent.cpp"
		$File	"soundent.h"
		$File	"soundscape.cpp"
		$File	"soundscape.h"
		$File	"soundscape_system.cpp"
		$File	"spark.h"
		$File	"spotlightend.cpp"
		$File	"spotlightend.h"
		$File	"sprite_perfmonitor.cpp"
		$File	"$SRCDIR\public\vphysics\stats.h"
		$File	"subs.cpp"
		$File	"sun.cpp"
		$File	"tactical_mission.cpp"
		$File	"tactical_mission.h"
		$File	"tanktrain.cpp"
		$File	"team.cpp"
		$File	"team.h"
		$File	"TemplateEntities.cpp"
		$File	"TemplateEntities.h"
		$File	"tempmonster.cpp"
		$File	"tesla.cpp"
		$File	"test_proxytoggle.cpp"
		$File	"test_stressentities.cpp"
		$File	"testfunctions.cpp"
		$File	"testtraceline.cpp"
		$File	"textstatsmgr.cpp"
		$File	"timedeventmgr.cpp"
		$File	"trains.cpp"
		$File	"trains.h"
		$File	"triggers.cpp"
		$File	"triggers.h"
		$File	"util.cpp"
		$File	"util.h"
		$File	"variant_t.cpp"
		$File	"vehicle_base.cpp"
		$File	"vehicle_baseserver.cpp"
		$File	"vehicle_sounds.h"
		$File	"vguiscreen.cpp"
		$File	"vguiscreen.h"
		$File	"$SRCDIR\game\shared\voice_gamemgr.cpp"
		$File	"vscript_server.cpp"
		$File	"vscript_server.h"
		$File	"vscript_server.nut"
		$File	"waterbullet.cpp"
		$File	"waterbullet.h"
		$File	"WaterLODControl.cpp"
		$File	"wcedit.cpp"
		$File	"wcedit.h"
		$File	"$SRCDIR\game\shared\weapon_proficiency.cpp"
		$File	"weight_button.cpp"
		$File	"world.cpp"
		$File	"world.h"
		$File	"$SRCDIR\game\shared\SharedFunctorUtils.h"
		$File	"$SRCDIR\game\server\vote_controller.h"
		$File	"$SRCDIR\game\server\vote_controller.cpp"
		//Haptics
		$File	"$SRCDIR\public\haptics\haptic_utils.cpp"	[$WIN32]

		// Not using precompiled header cbase.h

		$File	"$SRCDIR\public\bone_setup.cpp"					\
				"$SRCDIR\public\collisionutils.cpp"					\
				"$SRCDIR\public\dt_send.cpp"						\
				"$SRCDIR\public\dt_utlvector_send.cpp"				\
				"$SRCDIR\public\editor_sendcommand.cpp"				\
				"gamehandle.cpp"									\
				"h_export.cpp"										\
				"init_factory.cpp"									\
				"$SRCDIR\public\keyframe\keyframe.cpp"				\
				"$SRCDIR\public\map_utils.cpp"						\
				"$SRCDIR\public\registry.cpp"						\
				"$SRCDIR\public\server_class.cpp"					\
				"GameStats_BasicStatsFunctions.cpp"
		{
			$Configuration
			{
				$Compiler
				{
					$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
				}
			}
		}

		$Folder	"temporary entities"
		{
			$File	"basetempentity.cpp"
			$File	"event_tempentity_tester.cpp"
			$File	"movie_explosion.cpp"
			$File	"particle_fire.cpp"
			$File	"particle_smokegrenade.cpp"
			$File	"plasma.cpp"
			$File	"plasma.h"
			$File	"smoke_trail.h"
			$File	"smokestack.cpp"
			$File	"smokestack.h"
			$File	"smoke_trail.cpp"
			$File	"$SRCDIR\game\shared\SpriteTrail.cpp"
			$File	"steamjet.cpp"
			$File	"steamjet.h"
			$File	"te.cpp"
			$File	"te.h"
			$File	"te_armorricochet.cpp"
			$File	"te_basebeam.cpp"
			$File	"te_basebeam.h"
			$File	"te_beamentpoint.cpp"
			$File	"te_beaments.cpp"
			$File	"te_beamfollow.cpp"
			$File	"te_beamlaser.cpp"
			$File	"te_beampoints.cpp"
			$File	"te_beamring.cpp"
			$File	"te_beamringpoint.cpp"
			$File	"te_beamspline.cpp"
			$File	"te_bloodsprite.cpp"
			$File	"te_bloodstream.cpp"
			$File	"te_breakmodel.cpp"
			$File	"te_bspdecal.cpp"
			$File	"te_bubbles.cpp"
			$File	"te_bubbletrail.cpp"
			$File	"te_clientprojectile.cpp"
			$File	"te_decal.cpp"
			$File	"te_dynamiclight.cpp"
			$File	"te_effect_dispatch.cpp"
			$File	"te_energysplash.cpp"
			$File	"te_explosion.cpp"
			$File	"te_fizz.cpp"
			$File	"te_footprintdecal.cpp"
			$File	"hl2\te_gaussexplosion.cpp"
			$File	"te_glassshatter.cpp"
			$File	"te_glowsprite.cpp"
			$File	"te_impact.cpp"
			$File	"te_killplayerattachments.cpp"
			$File	"te_largefunnel.cpp"
			$File	"te_muzzleflash.cpp"
			$File	"te_particlesystem.cpp"
			$File	"te_particlesystem.h"
			$File	"te_physicsprop.cpp"
			$File	"te_playerdecal.cpp"
			$File	"te_projecteddecal.cpp"
			$File	"te_showline.cpp"
			$File	"te_smoke.cpp"
			$File	"te_sparks.cpp"
			$File	"te_sprite.cpp"
			$File	"te_spritespray.cpp"
			$File	"te_worlddecal.cpp"
			$File	"$SRCDIR\game\shared\usermessages.cpp"
		}

	}

	$Folder	"Header Files"
	{
		$File	"base_transmit_proxy.h"
		$File	"basetempentity.h"
		$File	"cplane.h"
		$File	"damagemodifier.h"
		$File	"$SRCDIR\public\dt_utlvector_send.h"
		$File	"EventLog.h"
		$File	"$SRCDIR\game\shared\expressionsample.h"
		$File	"fogcontroller.h"
		$File	"globals.h"
		$File	"$SRCDIR\game\shared\hl2\hl2_vehicle_radar.h"
		$File	"$SRCDIR\public\ihltv.h"
		$File	"$SRCDIR\public\ihltvdirector.h"
		$File	"ilagcompensationmanager.h"
		$File	"logicrelay.h"
		$File	"$SRCDIR\public\map_utils.h"
		$File	"mapentities.h"
		$File	"modelentities.h"
		$File	"npc_vehicledriver.h"
		$File	"particle_system.h"
		$File	"physics_cannister.h"
		$File	"physics_fx.h"
		$File	"physics_impact_damage.h"
		$File	"$SRCDIR\public\vphysics\player_controller.h"
		$File	"playerinfomanager.h"
		$File	"$SRCDIR\game\shared\querycache.h"
		$File	"$SRCDIR\game\shared\props_shared.h"
		$File	"$SRCDIR\game\shared\saverestore_stringtable.h"
		$File	"$SRCDIR\game\shared\saverestore_utlmap.h"
		$File	"$SRCDIR\game\shared\saverestore_utlrbtree.h"
		$File	"scratchpad_gamedll_helpers.h"
		$File	"sendproxy.h"
		$File	"SkyCamera.h"
		$File	"soundscape_system.h"
		$File	"$SRCDIR\public\stdstring.h"
		$File	"te_effect_dispatch.h"
		$File	"tesla.h"
		$File	"test_stressentities.h"
		$File	"textstatsmgr.h"
		$File	"timedeventmgr.h"
		$File	"$SRCDIR\public\UtlCachedFileData.h"
		$File	"$SRCDIR\public\tier1\UtlSortVector.h"
		$File	"variant_t.h"
		$File	"$SRCDIR\public\tier0\vcr_shared.h"
		$File	"$SRCDIR\public\tier0\vcrmode.h"
		$File	"vehicle_base.h"
		$File	"vehicle_baseserver.h"
		$File	"$SRCDIR\public\vphysics\vehicles.h"
		$File	"$SRCDIR\public\winlite.h"
		//Haptics
		$File	"$SRCDIR\public\haptics\haptic_utils.h"	[$WIN32]
	}

	$Folder	"Tools Framework"
	{
		$File	"entity_tools_server.cpp"
		$File	"toolframework_server.cpp"
		$File	"toolframework_server.h"
	}
	
	$Folder	"Link Libraries" 
	{
		$ImpLibexternal steam_api
	}
}
